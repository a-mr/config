Bash/Zsh                                  | my Bash/Zsh:
  !$       last word of previous command  |  A-o  command beginning backward
  $_       last arg  of previous command  |  A-i  command beginning forward
  C-v C-j  insert newline w/o executing   |  C-e  zsh: expand abbreviation
  !str     repeat prev cmd started w/ str | tt T  set Screen/tmux Tab Title T
  !?str    repeat prev cmd containing str | tn N  set Screen/tmux Tab Num N
  !:0      name of prev cmd               |  psu  show my processes
  !* or !!1* or !!:1-$                    |  psa  show all processes
           all arguments to prev cmd      | nd D  mkdir D and cd D
  !-2:0    name of cmd before previous    |  l D  cd directory D and ls D
                                          | A-a   zsh: execute auto suggestion
  cd -<N>  cd previous directory <N>      | A-p   append pager  A-v  vim pager
  $OLDPWD  previous directory #1          | A-k   run in man
  C-u <next cmd> C-y    to delete command | A-h   run cmd --help
           and take it back to the prompt | A-n   run numbered pager(for n<N>)
__________________________________________|n10 c  open 10th line by `c` cmd
My Vim/Bash/Zsh:   A-y  beginning-of-line | v10   open 10th line by vim
  A-e  escape      A-u  end-of-line       |       n10p : n10n     v10p : v10n
__________________________________________| o10   open 10th line by xgd-open
fp   get fullpath  A-b  add buffer2 to line    b  print buffer2
cdb  cd to buffer2 location                   vb  vim to buffer2
______________________________________________________________________________
Vim                     |Vim spellcheck                |Vim window
  zo  open fold (zO-rec)| <F9> or set spell/set nospell| C-w +-  resize up/dn
  zc  close fold(zC-rec)| zg  add word to dict         | C-w <>  resize le/ri
  zM    fold all        | z=  propose completion list  | C-w 10< resize le*10
  zR    unfold all      | ]s  goto next misspelled     | C-w v   vertical pane
  zm/r  fold level +/-  |Paths_________________________| C-w |   maximize vert
  za  toggle fold       | %    current file in :!      | C-w _   maximize hor.
  zA  toggle fold recur.| %:p  the same, full path     | C-w H   to vert.split
                                                       | C-w K  to horiz.split
  R<C-r>"  replace-paste after yanking text |    ''  jump to prev.visited mark
  C-]      follow link (e.g. man mode)      |    '^  jump to prev.edited pos.
  |Normal mode:  C-e  move screen           |my: A-q  goto prev mark
  |              C-y  move screen           |    A-'  goto next mark
  |              zz   curr.line ->center
  :Man 2 fork  open man page in sec.2    C-y  insert chars above cursor
  @:  repeat substitution command (1st time repeat -- then use just @@)
______________________________________________________________________________
  :%sort  or  :%!sort     sort the whole file (range=%), `-n` for numeric sort
  :g/PAT show lines matching PAT           :read <file>  paste <file> contents
  :match  Boolean   /paTTERN/   #add highlight grp 1 with paTTERN & color Bool
  :2match Character /paTTERN/   #add highlight grp 2 with paTTERN & color Char
vim-mark:   (highlighting selected words with different colors)
  1sm  highlight group 1, etc           :Marks  print all marks (vim-mark)
  :MarkLoad  load saved highlightings   sr      input pattern to mark
vim-ultisnips:  TAB  expand a snippet/next field      S-Tab  previous field
______________________________________________________________________________
  :set cc=8                     #highlight column 8 (to navigate long funcs)
  :put =map(range(0,75), 'printf(''// %d'', v:val)')   #insert list of numbers
  :for i in range(1,10) | put ='// '.i | endfor        =the same
______________________________________________________________________________
         H  jump to screen top       zt  position cur.line at top
         M  jump to screen middle    zz  POSITION CUR.LINE AT MIDDLE
         L  jump to screen bottom    zb  position cur.line at bottom
______________________________________________________________________________
Easymotion                          My:   sw A-w  go to word beg
  ssf<SYM> goto symbol <SYM>              se      go to word end
  ssw      select word downwards          sk      go to line
  ssb      select word upwards            sn      go to symbol
  ssj      select line frwd
  ssk      select line back
My Vim:                   s     <Leader>              |vim-markgroup:
  A-t  enter tab to edit  st    select tag            |A-m  open quick markbar
  A-n  next tab           <F9>  select spell lang     |so   open slow mark bar
  A-p  prev tab           <F8>  select encoding       |n/N  move in slow m/b
  A-o  to last tab        sl    highlight current line|  r  set name for mark
  A-m  select marks       A-i   NEXT WINDOW
 A-j  goto next VCS chg   A-b   convert buffers->tabs               C-s  SAVE
 A-k  goto prev VCS chg   A-x   show VCS changes for file           C-q  CLOSE
 C-c  copy to Clipboard   A-z   comment      Insert:  C-e/C-n  next completion
 C-j  paste from Clipboard(preserving indent)         C-p      prev completion
   A-,  new line after current       A-;  put ; at the end and new line
   F2    toggle syntax               F3   toggle paste mode    A-.  add printf
   S-F2  toggle parens highlighting  F4   remove trailnig whitespace
   F5    compile                     F6   compile & run        F7   call make
   F8    call SyncTex                F9   spell check          F10  encoding
  :S  do multiline search (if lines were wrapped)
My Vim clangd:                  A-g  GOTO DEFINITION
  A-f  format code              A-h  show type hierarchy  A-v  cycle var usage
  A-a  apply suggestion action  A-s  SHOW SYMBOL INFO
  A-d  show definition <------> A-l  show declaration     A-r  next error
______________________________________________________________________________
 Tmux                              Screen
      PRE ]  paste                   PRE ]    paste
      PRE "  split horizontally      PRE S    split horizontally
      PRE %  split vertically        PRE |    split vertically
 PRE-cursor  goto pane (to left,..)  PRE tab  next pane
      PRE x  kill pane               PRE X    close region (NOTE Shift-x)
 hold PRE -> resize pane             PRE :resize +10
      PRE q  kill the window         PRE k    close ("kill") current window
      PRE l  previous window    my:  C-n C-o switch to the window before
stty rows 40 cols 145  change dimensions of serial console     dim  print that
______________________________________________________________________________
                            My XFCE4
C-A-t    terminal          | C-A-k  tile top    | C-A-S-k  tile top-right
C-A-C    clipboard Manager | C-A-j  tile bottom | C-A-S-j  tile bottom-left
C-A-m    xfce Whisker Menu | C-A-l  tile right  | C-A-S-l  tile bottom-right
C-A-d    xrandr -o left    | C-A-h  tile left   | C-A-S-h  tile top-left
C-A-S-d  xrandr -o normal  |         Win-s  screenshot of area
C-A-e   maximize                     C-A-s  synapse search
C-A-v   maximize vertically          C-A-w  resize window (j/k/h/l)
C-A-S-v maximize horizontally        C-A-o  move window (j/k/h/l)
C-S-N   move Win to workspace <N>    C-A-z  this help
C-N     go to workspace <N>          C-A-r  open scratchpad
C-A-n   go to right desktop     | hold Win and scroll on the window decoration
C-A-p   go to left  desktop     | to change transparency of window
______________________________________________________________________________
  xcl [FILE]  copy text to clipboard from stdin [or FILE]
  gi   nimgrep ignorecase             ggi   gnu grep ignorecase
  g    nimgrep ignorecase from stdin  gg    gnu grep ignorecase from stdin
  gc   nimgrep case-sensitive         ggc   gnu grep case-sensitive
  ng   nimgrep nim-sensitive
Ranger:  E/e edit        i  pager  <Enter>/l  xdg-open    s  run Shell cmd
         S  start Shell       yy yank    pp  paste     !  run cmd w/output
         ya  add file to %c   yr  remove from %c   uy  clear all files from %c
my:  xx  execute              xtx  execute in x/term   xo   xdg-open on %f
     xv  run vim on %f         xf  any cmd on %f        xn/xg  (nim)grep on %f
     xtv run vim in x/term                            x.n/x.g  (nim)grep on .
     cv  run vim on %c         c!  any cmd on %c        cn/cg  (nim)grep on %c
     ctv run vim on %c in x/term                       co   xdg-open on all %c
Confluence:   ?  help   C-S-d  insert Markdown mark-up   C-k   link
  C-m  image/file       C-S-H  find and replace          C-S-e preview
My qpdfview: Ctrl-g  search   Ctrl-j  jump page number   Ctrl+-/+  zoom out/in
   o  open   m  add bookmark  Ctrl-M  toggle bookmark bar  F6  toggle TOC
   Ctrl-C  copy to clipboard  Ctrl-V  invert colors      Ctrl-Alt-6  two pages
   Ctrl-N/P  next/previous tab            Ctrl-B/F/H/J/K/L/O/I  vim navigation
   s/v   split view horizontally/vertically   x  close view        Space  copy
______________________________________________________________________________
                            Git / VCS
n10d       show diff for `10`th entry in current buffer
n10a       add `10`th file
add F      add file F to staged area
uad F      undo addition of new file
unstage F  remove F from Git staged area preserving the changes
rvr F      !!! revert changes to file F !!!
pus        push the curr feat branch
pul        fetch & update curr.feat.branch
get [BR]   fetch changes (to BR-anch or both to def.branch & curr.feat.branch)
upd        update to latest revision of curr.branch (Git fast forward)
upd_master Git: move master to origin/master
cou REV    checkout specific revision REV

com MSG    commit with message MSG
uncom      uncommit Git preserving the changes

cnt        continue rebase
gitmerges  show merges to curr.feat.branch
squ        squash commits on curr. feature branch
reb        Git fetch default branch, rebase on it, and push -f

gra      graph for all branches         sho   show stashed changes
grb      graph for current branch       sav   save to stash
log      log of all branches            res   restore stashed
lgb [BR] the same for branch BR
logmy    all of my commits

lsb   list branches                     dbr   show default branch name
lbr   ~ the same, with dates!           bra   show curr.branch name
inf   information about repo and curr.branch/revision
roo   root directory of the repo - absolute path

has REVISION BRANCH   check if BRANCH contains REVISION

dif  [FILE]           diff w.r.t. latest commit
difp [FILE]           the same, in patch format (uncolored)
difb [BRANCH]         show all changes in cur.branch[or BRANCH] (difb -- FILE)
sta                   show statistics
stab [BRANCH]         show changed files in current branch (or BRANCH)
dat [REVISION]        print date of REVISION (or latest commit)
datshort              the same, short version
pat  [REVISION]       print patch [for REVISION]
pats [REVISION]       print list of files changed [for REVISION]
patf [REVISION]       the same with 1000 lines of context
his FILE              history of all changes to FILE
hisb [BRANCH]         log all file changes  (`hisb -- FILE` for only 1 file)
lin LINENUM FILE      print history for LINENUM-ber of FILE
pri REVISION FILE     print FILE contents at REVISION
ann FILE              annotate=blame
lsf FILE              check if FILE in repository
lsf DIRECTORY         list files in DIRECTORY
lsf                   list files in whole repository
mov NAME1 NAME2       rename file NAME1 to NAME2

pur        purge: clean all extra files
gitlfspur  remove all downloaded LFS files

clo REPO              clone repository REPO
clb REPO BRANCH       clone specific BRANCH of REPO

github NUMBER         fetch & checkout Github PR number
______________________________________________________________________________
0 - admin/program start   2 - Web         4 - auxiliary work         6 - VMs
1 - e-mail/messagers      3 - main work   5 - remote work (ssh...)
______________________________________________________________________________
                            Ibus input
C-space  switch between System/Latex layouts
C-.      start emoji input BELOW then <Space> (1+ times) then <Enter>:
     thumbs 👍👎     popper 🎉    smile 😃😄😁😆😅  angry 😠
     facepalm 🤦‍♂️     rolling 🤣   glasses 😎        scream 😱
     affection 🥰    love 😍      kiss 😘           think 🤔
     heart' ❤️       warning ⚠️   [no] entry ⛔     [no] entry'=prohibited🚫
     biohazard ☣️    cancel' ❌   radioactive ☢️☢   info(rmation source)' 🛈
     check[mark]' ✔  bullet' •    minus ➖          copy(right) ©
     books 📚        notebook 📔  scroll 📜         write ✍️
     pencil ✏️       ballpoint 🖊️ paperclip 📎      scissors ✂️
     russia 🇷🇺       bomb 💣      firecraker 🧨     hourglass ⏳
     fireworks 🎆    sparkler 🎇  trophy 🏆         medal 🎖️🏅
     gift 🎁         ribbon 🎀    magic 🪄          gem 💎
     shopping 🛍️🛒   battery 🔋   keyboard ⌨️ 🎹    movie 🎥
     magnifying 🔍   knot🪢       flashlight 🔦     label 🏷️
     money 🤑💰      coin 🪙      email ✉️          folder 📁
     clipboard 📋    locked 🔒    waste(basket) 🗑   key 🔑
     hammer 🔨       axe 🪓       wrench 🔧         screwdriver 🪛
     gear ⚙️         link 🔗      stethoscope 🩺    plunger 🪠
     broom 🧹        knob 🎛       slider 🎚️🎚        clamp 🗜️
     headstone 🪦    voltage ⚡   (nut and) bolt 🔩 (balance)scale ⚖️⚖
     ruler 📏📐      pushpin 📌   (carpentry)saw🪚  [test] tube 🧪
     globe 🌍        sun' ☀️      rain' 🌧️🌧        tornado 🌪️
     rainbow 🌈      droplet 💧
     bread 🍞        cheese 🧀    pizza 🍕          birthday [cake] 🎂
     cookie 🍪       chocolate 🍫 wine 🍷           tea, beverage ☕
