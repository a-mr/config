Bash/Zsh                                  | my Bash/Zsh:
  !$       last word of previous command  |  A-o  command beginning backward
  $_       last arg  of previous command  |  A-i  command beginning forward
  C-v C-j  insert newline w/o executing   |  C-e  expand abbreviation (zsh)
  !str     repeat prev cmd started w/ str | tt T  set Screen/tmux Tab Title T
  !?str    repeat prev cmd containing str | tn N  set Screen/tmux Tab Num N
  !:0      name of prev cmd               |  psu  show my processes
  !* or !!1* or !!:1-$                    |  psa  show all processes
           all arguments to prev cmd
  !-2:0    name of cmd before previous
  cd -<n>  cd previous directory #n
  $OLDPWD  previous directory #1   
______________________________________________________________________________
Vim                     |Vim spellcheck                |Vim window
  zo  open fold         | <F9> or set spell/set nospell| C-w +-  resize up/dn
  zc  close fold        | zg  add word to dict         | C-w <>  resize le/ri
  zM  fold all          | z=  propose completion list  | C-w 10< resize le*10
  zR  unfold all        | ]s  goto next misspelled     | C-w v   vertical pane
  zz  curr.line ->center|                              | C-w |   maximize vert
                        | %    current file in :!      | C-w _   maximize hor.
  ]c  goto next VCS chg | %:p  the same, full path     |
  ]'  goto next mark    |                              | ''   go to last line
  :g/PAT show lines     |           R<C-r>"  replace-paste after yanking text
         matching PAT   |           C-]      follow link (e.g. man mode)
______________________________________________________________________________
  :match  Boolean   /paTTERN/   #add highlight grp 1 with paTTERN & color Bool
  :2match Character /paTTERN/   #add highlight grp 2 with paTTERN & color Char
vim-mark:
  1\m  highlight group 1, etc           :Marks  print all marks (vim-mark)
  :MarkLoad  load saved highlightings   sr      input pattern to mark
vim-ultisnips:                       vim-lsp:
  TAB  expand a snippet                C-e  next completion
  C-j  next field in the snippet       C-p  prev completion
                                       C-f  code action (quick fix)
______________________________________________________________________________
  :set cc=8                     #highlight column 8 (to navigate long funcs)
  :put =map(range(0,75), 'printf(''// %d'', v:val)')   #insert list of numbers
  :for i in range(1,10) | put ='// '.i | endfor        =the same
______________________________________________________________________________
         H  jump to screen top       zt  position cur.line at top
         M  jump to screen middle    zz  position cur.line at middle
         L  jump to screen bottom    zb  position cur.line at bottom
______________________________________________________________________________
Easymotion                          My:  sw  go to word beg
 ssf<SYM> goto symbol <SYM>              se  go to word end
 ssw      select downwards               sk  go to line
 ssb      select upwards                 sn  go to symbol
 ssj      select line frwd
 ssk      select line back
my Vim:                                                vim-markgroup:
  A-t  enter tab to edit  st    select tag             sb  open quick mark bar
  A-n  next tab           <F9>  select spell lang      so  open slow mark bar
  A-p  prev tab           <F8>  select encoding        n/N  move in slow one
  A-o  to last tab        sl    highlight current line  r  set name for mark
  A-m  select marks
______________________________________________________________________________
 Tmux                              Screen
      PRE ]  paste                   PRE ]    paste
      PRE "  split horizontally      PRE S    split horizontally
      PRE %  split vertically        PRE |    split vertiacally
                                     PRE tab  next pane
                                     PRE X    close region (note Shift-x)
 hold PRE -> resize pane             PRE :resize +10
                                my:  C-n C-o switch to the window before
______________________________________________________________________________
                            XFCE4
C-a-n  go to right desktop
C-a-p  go to left  desktop
C-A-t  Terminal          | C-A-k  Tile top    | C-A-S-k  Tile top-right
C-A-C  Clipboard Manager | C-A-j  Tile bottom | C-A-S-j  Tile bottom-left
C-A-m  Xfce Whisker Menu | C-A-l  Tile right  | C-A-S-l  Tile bottom-right
C-A-d  xrandr -o left    | C-A-h  Tile left   | C-A-S-h  Tile top-left
C-A-S-d  xrandr -o normal
C-A-e   Maximize                   Win-s  screenshot of area
C-A-v   Maximize vertically        C-A-s  synapse search
C-A-S-v Maximize horizontally
C-A-w   Resize window (j/k/h/l)    C-A-o  Move window (j/k/h/l)
C-S-n   Move Win to workspace <n>
 hold Win and scroll on the window decoration — to change transparency of window
______________________________________________________________________________
                            Ibus input
C-space  switch between System/Latex layouts
C-.      start emoji input BELOW then <Space> (1+ times) then <Enter>:
     thumbs 👍👎     popper 🎉    smile 😃😄😁😆😅  angry 😠
     facepalm 🤦‍♂️     rolling 🤣   glasses 😎        scream 😱
     affection 🥰    love 😍      kiss 😘           think 🤔
     heart' ❤️       warning ⚠️   [no] entry ⛔     [no] entry'=prohibited🚫
     biohazard ☣️    cancel' ❌   radioactive ☢️☢   info(rmation source)' 🛈
     check[mark]' ✔  bullet' •    minus ➖          copy(right) ©
     books 📚        notebook 📔  scroll 📜         write ✍️
     pencil ✏️       ballpoint 🖊️ paperclip 📎      scissors ✂️
     russia 🇷🇺       bomb 💣      firecraker 🧨     hourglass ⏳
     fireworks 🎆    sparkler 🎇  trophy 🏆         medal 🎖️🏅
     gift 🎁         ribbon 🎀    magic 🪄          gem 💎
     shopping 🛍️🛒   battery 🔋   keyboard ⌨️ 🎹    movie 🎥
     magnifying 🔍   knot🪢       flashlight 🔦     label 🏷️
     money 🤑💰      coin 🪙      email ✉️          folder 📁
     clipboard 📋    locked 🔒    waste(basket) 🗑   key 🔑
     hammer 🔨       axe 🪓       wrench 🔧         screwdriver 🪛
     gear ⚙️         link 🔗      stethoscope 🩺    plunger 🪠
     broom 🧹        knob 🎛       slider 🎚️🎚        clamp 🗜️
     headstone 🪦    voltage ⚡   (nut and) bolt 🔩 (balance)scale ⚖️⚖
     ruler 📏📐      pushpin 📌   (carpentry)saw🪚  [test] tube 🧪
     globe 🌍        sun' ☀️      rain' 🌧️🌧        tornado 🌪️
     rainbow 🌈      droplet 💧
     bread 🍞        cheese 🧀    pizza 🍕          birthday [cake] 🎂
     cookie 🍪       chocolate 🍫 wine 🍷           tea, beverage ☕


C-A-z   this help                  C-A-r  open scratchpad
______________________________________________________________________________
                            Git / VCS
b10d       show diff for `10`th entry in current buffer
b10a       add `10`th file
add F      add file F to staged area
uad F      undo addition of new file
unstage F  remove F from Git staged area preserving the changes
rvr F      !!! revert changes to file F !!!
pus        push the curr feat branch
pul        fetch & update curr.feat.branch
get [BR]   fetch changes (to BR-anch or both to def.branch & curr.feat.branch)
upd        update to latest revision of curr.branch (Git fast forward)
upd_master Git: move master to origin/master
cou REV    checkout specific revision REV

com MSG    commit with message MSG
uncom      uncommit Git preserving the changes

cnt        continue rebase
gitmerges  show merges to curr.feat.branch
squ        squash commits on curr. feature branch
reb        Git fetch default branch, rebase on it, and push -f

sho   show stashed changes
sav   save to stash
res   restore stashed

lsb   list branches
lbr   ~ the same, with dates!
dbr   show default branch name
bra   show curr.branch name
inf   information about repo and curr.branch/revision
roo   root directory of the repo - absolute path

gra   graph for all branches
grb   graph for current branch
log   log of all branches
lgf   log with all file changes
lgf BRANCH            the same for BRANCH
has REVISION BRANCH   check if BRANCH contains REVISION

dif  [FILE]           diff w.r.t. latest commit
difp [FILE]           the same, in patch format (uncolored)
difb [BRANCH]         show all changes in current branch (or BRANCH)
dat [REVISION]        print date of REVISION (or latest commit)
datshort              the same, short version
pat [REVISION]        print patch [for REVISION]
patf [REVISION]       the same with 1000 lines of context
his FILE              history of all changes to FILE
lin LINENUM FILE      print history for LINENUM-ber of FILE
pri REVISION FILE     print FILE contents at REVISION
ann FILE              annotate=blame
lsf FILE              check if FILE in repository
lsf DIRECTORY         list files in DIRECTORY
lsf                   list files in whole repository
mov NAME1 NAME2       rename file NAME1 to NAME2

pur        purge: clean all extra files
gitlfspur  remove all downloaded LFS files

clo REPO              clone repository REPO
clb REPO BRANCH       clone specific BRANCH of REPO

github NUMBER         fetch & checkout Github PR number
